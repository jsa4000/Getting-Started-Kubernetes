@startuml kubernetes

footer Kubernetes Plant-UML
scale max 1024 width

' skinparam nodesep 5
' skinparam ranksep 5

!define BLUE_COLOR #23a3dd

skinparam arrow {
    Color BLUE_COLOR
    FontColor BLACK
}

skinparam rectangle {
    BackgroundColor BLUE_COLOR
    BorderColor #16688d
    FontColor BLACK
}


' Kubernetes
!define KubernetesPuml https://raw.githubusercontent.com/jsa4000/Getting-Started-Kubernetes/main/dist

!includeurl KubernetesPuml/kubernetes_Common.puml
!includeurl KubernetesPuml/kubernetes_Context.puml
!includeurl KubernetesPuml/kubernetes_Simplified.puml

!includeurl KubernetesPuml/OSS/KubernetesSvc.puml
!includeurl KubernetesPuml/OSS/KubernetesIng.puml
!includeurl KubernetesPuml/OSS/KubernetesPod.puml
!includeurl KubernetesPuml/OSS/KubernetesRs.puml
!includeurl KubernetesPuml/OSS/KubernetesDeploy.puml
!includeurl KubernetesPuml/OSS/KubernetesHpa.puml
!includeurl KubernetesPuml/OSS/KubernetesUser.puml

KubernetesUser(userAlias, "User", "")

left to right direction

' Kubernetes Components
Cluster_Boundary(cluster, "Kubernetes Cluster") {
    Namespace_Boundary(ns, "micro") {
        KubernetesIng(ingress, "example.domain.com", "")
        KubernetesSvc(svc, "Service", "")
        KubernetesPod(pod1, "Pod1", "")
        KubernetesPod(pod2, "Pod2", "")
        KubernetesPod(pod3, "Pod3", "")

        KubernetesRs(rs,"","")
        KubernetesDeploy(deploy,"Deployment","")
        KubernetesHpa(hpa, "HPA", "")
    }
}


Rel(userAlias,ingress," ")
Rel(ingress,svc," ")

Rel(svc,pod1," ")
Rel(svc,pod2," ")
Rel(svc,pod3," ")

Rel_U(rs,pod1," ")
Rel_U(rs,pod2," ")
Rel_U(rs,pod3," ")

Rel_U(deploy,rs, " ")
Rel_U(hpa,deploy, " ")

@enduml